name: Database Migration

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/database/migrations/001_khouryclassroom.sql'
      - '.github/workflows/db_migration.yml'

jobs:
  invoke-lambda:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058264409130:role/github-actions-deploy-role
          aws-region: us-east-2

      - name: Store Snapshot of AWS RDS Instance
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          aws rds create-db-snapshot \
            --db-instance-identifier gitmarks-rds-instance \
            --db-snapshot-identifier "gitmarks-db-snapshot-$TIMESTAMP"

      - name: Delete Old Snapshots
        run: |
          # Set the maximum number of snapshots to retain (not including new one)
          RETENTION_LIMIT=2
        
          # Fetch all manual snapshots for the specified DB instance, sorted by creation time
          SNAPSHOTS=$(aws rds describe-db-snapshots \
            --db-instance-identifier gitmarks-rds-instance \
            --snapshot-type manual \
            --query "DBSnapshots[?starts_with(DBSnapshotIdentifier, 'gitmarks-db-snapshot-') && (Status=='available' || Status=='failed')].{ID:DBSnapshotIdentifier,Time:SnapshotCreateTime}" \
            --output json | jq -r 'sort_by(.Time) | .[].ID')
        
          # Determine how many snapshots to delete
          SNAPSHOT_COUNT=$(echo "$SNAPSHOTS" | wc -l)
          DELETE_COUNT=$((SNAPSHOT_COUNT - RETENTION_LIMIT))
        
          if [ "$DELETE_COUNT" -gt 0 ]; then
            # List snapshots to delete
            SNAPSHOTS_TO_DELETE=$(echo "$SNAPSHOTS" | head -n "$DELETE_COUNT")
        
            # Loop through each snapshot and delete it
            for SNAPSHOT_ID in $SNAPSHOTS_TO_DELETE; do
              echo "Deleting snapshot: $SNAPSHOT_ID"
              aws rds delete-db-snapshot --db-snapshot-identifier "$SNAPSHOT_ID"
            done
          else
            echo "No snapshots to delete."
          fi          
          
      - name: Re-Initialize RDS Schema
        run: |
          aws lambda invoke \
            --function-name drop_db \
            --invocation-type Event \
            --cli-binary-format raw-in-base64-out \
            /dev/null