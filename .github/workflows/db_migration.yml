name: Database Migration

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/kho-237/workflow-db-migration
    paths:
      - 'backend/database/migrations/001_khouryclassroom.sql'
      - '.github/workflows/db_migration.yml'

jobs:
  invoke-lambda:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058264409130:role/github-actions-deploy-role
          aws-region: us-east-2

      - name: Store Snapshot of AWS RDS Instance
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          aws rds create-db-snapshot \
            --db-instance-identifier gitmarks-rds-instance \
            --db-snapshot-identifier "gitmarks-db-snapshot-$TIMESTAMP"

      - name: Delete Old Snapshots
        run: |
            RETENTION_LIMIT=1
            SNAPSHOTS=$(aws rds describe-db-snapshots \
                --db-instance-identifier gitmarks-rds-instance \
                --snapshot-type manual \
                --query 'DBSnapshots[?starts_with(DBSnapshotIdentifier, `gitmarks-db-snapshot-`)] \
                    | sort_by(@, &SnapshotCreateTime)[*].DBSnapshotIdentifier' \
                    --output text)
            SNAPSHOT_COUNT=$(echo "$SNAPSHOTS" | wc -w)
            if [ "$SNAPSHOT_COUNT" -gt "$RETENTION_LIMIT" ]; then
            SNAPSHOTS_TO_DELETE=$(echo "$SNAPSHOTS" | awk -v n=$(($SNAPSHOT_COUNT - $RETENTION_LIMIT)) '{for (i=1; i<=n; i++) print $i}')
            for SNAPSHOT_ID in $SNAPSHOTS_TO_DELETE; do
                aws rds delete-db-snapshot --db-snapshot-identifier "$SNAPSHOT_ID"
            done
            fi

      - name: Invoke Lambda Function
        run: |
          aws lambda invoke \
            --function-name drop_db \
            --invocation-type Event \
            --cli-binary-format raw-in-base64-out \
            /dev/null